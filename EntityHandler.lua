local a={entityList={},entityConnections={},entityPlayerConnections={},entityIds={},isAlive=false,character={Head={},Humanoid={},HumanoidRootPart={}}}local b=game:GetService("Players")local c=game:GetService("HttpService")local d=b.LocalPlayer;local e=Instance.new("BindableEvent")local f=Instance.new("BindableEvent")local g=Instance.new("BindableEvent")do a.entityAddedEvent={Connect=function(a,a)return e.Event:Connect(a)end,connect=function(a,a)return e.Event:Connect(a)end,Fire=function(a,...)e:Fire(...)end}a.entityRemovedEvent={Connect=function(a,a)return f.Event:Connect(a)end,connect=function(a,a)return f.Event:Connect(a)end,Fire=function(a,...)f:Fire(...)end}a.entityUpdatedEvent={Connect=function(a,a)return g.Event:Connect(a)end,connect=function(a,a)return g.Event:Connect(a)end,Fire=function(a,...)g:Fire(...)end}a.isPlayerTargetable=function(a)if(not d.Team)then return true end;if(not a.Team)then return true end;if a.Team~=d.Team then return true end;return#a.Team:GetPlayers()==#b:GetPlayers()end;a.getEntityFromPlayer=function(b)for a,c in next,a.entityList do if c.Player==b then return a,c end end end;a.removeEntity=function(b)local c,d=a.getEntityFromPlayer(b)if c then a.entityRemovedEvent:Fire(b)for a,a in next,(d.Connections or{})do if a.Disconnect then a:Disconnect()end end;table.remove(a.entityList,c)end end;a.refreshEntity=function(b,c)a.removeEntity(b)a.characterAdded(b,b.Character,c,true)end;a.getHealth=function(a)return a.Humanoid.Health,a.Humanoid.MaxHealth end;a.getUpdateConnections=function(a)local a=a.Humanoid;return{a:GetPropertyChangedSignal("Health"),a:GetPropertyChangedSignal("MaxHealth")}end;a.characterAdded=function(b,d,e,f)if d then task.spawn(function()local c=c:GenerateGUID(true)a.entityIds[b.Name]=c;local f=d:WaitForChild("HumanoidRootPart",10)local g=d:WaitForChild("Head",10)or f and{Position=f.Position+Vector3.new(0,3,0),Name="Head",Size=Vector3.new(1,1,1),CFrame=f.CFrame+Vector3.new(0,3,0),Parent=d}local h=d:WaitForChild("Humanoid",10)or d:FindFirstChildWhichIsA("Humanoid")if f and h and g and a.entityIds[b.Name]==c then local i;local j;if e then a.isAlive=true;a.character.Head=g;a.character.Humanoid=h;a.character.HumanoidRootPart=f else j={Player=b,Character=d,HumanoidRootPart=f,RootPart=f,Head=g,Humanoid=h,Targetable=a.isPlayerTargetable(b),Team=b.Team,Connections={}}setmetatable(j,{__tostring=function()return j.Player.Name or"Entity"end,__index=function(b,c)if c=='Health'then return({a.getHealth(j)})[1]or 100 elseif c=='MaxHealth'then return({a.getHealth(j)})[2]or 100 end;return rawget(b,c)end})if a.entityIds[b.Name]==c then for b,b in next,a.getUpdateConnections(j)do table.insert(j.Connections,b:Connect(function()a.entityUpdatedEvent:Fire(j)end))end;table.insert(a.entityList,j)a.entityAddedEvent:Fire(j)end end;if a.entityIds[b.Name]==c then i=d.ChildRemoved:Connect(function(c)if c.Name=="HumanoidRootPart"or c.Name=="Head"or c.Name=="Humanoid"then i:Disconnect()if e then a.isAlive=false else a.removeEntity(b)end end end)if j then table.insert(j.Connections,i)end;table.insert(a.entityConnections,i)end end end)end end;a.entityAdded=function(b,c,d)table.insert(a.entityConnections,b:GetPropertyChangedSignal("Character"):Connect(function()if b.Character then a.refreshEntity(b,c)else if c then a.isAlive=false else a.removeEntity(b)end end end))table.insert(a.entityConnections,b:GetPropertyChangedSignal("Team"):Connect(function()for b,b in next,a.entityList do if b.Targetable~=a.isPlayerTargetable(b.Player)then a.refreshEntity(b.Player)end end;if c then a.fullEntityRefresh()else a.refreshEntity(b,c)end end))if b.Character then task.spawn(a.refreshEntity,b,c)end end;a.fullEntityRefresh=function()a.selfDestruct()for b,c in next,a.entityIds do a.entityIds[b]=nil end;for b,b in next,b:GetPlayers()do a.entityAdded(b,b==d)end;table.insert(a.entityConnections,b.PlayerAdded:Connect(function(b)a.entityAdded(b,b==d)end))table.insert(a.entityConnections,b.PlayerRemoving:Connect(function(b)a.removeEntity(b)end))end;a.selfDestruct=function()for b,c in next,a.entityIds do a.entityIds[b]=nil end;for a,a in next,a.entityConnections do if a.Disconnect then a:Disconnect()end end;for b,b in next,a.entityList do a.removeEntity(b.Player)end end end;return a
